name: Main Workflow

on:
  push:
    branches:
      - main
      - develop
      - "feature/*"

permissions:
  id-token: write
  contents: read

jobs:
  deploy-dev:
    name: Deploy to Dev
    uses: ./.github/workflows/services-deploy.yml
    with:
      environment: dev
      aws_account_id: "474668415523"
      lambda_functions: >-
        [
            {"name": "get-student-data", "directory": "lambdas/workers/GetStudentData", "runtime": "nodejs"},
            {"name": "get-student-courses", "directory": "lambdas/workers/GetStudentCourses", "runtime": "nodejs"},
            {"name": "get-program-details", "directory": "lambdas/workers/GetProgramDetails", "runtime": "nodejs"},
            {"name": "hello_world", "directory": "lambdas/HelloWorld", "runtime": "nodejs"},
            {"name": "student-query-intake", "directory": "lambdas/orchestrators/QueryIntake", "runtime": "nodejs"},
            {"name": "student-query-llm-analyzer", "directory": "lambdas/orchestrators/LLMQueryAnalyzer", "runtime": "python"},
            {"name": "student-query-worker-dispatcher", "directory": "lambdas/orchestrators/WorkerDispatcher", "runtime": "nodejs"},
            {"name": "student-query-response-aggregator", "directory": "lambdas/orchestrators/ResponseAggregator", "runtime": "nodejs"},
            {"name": "student-query-answer-generator", "directory": "lambdas/orchestrators/AnswerGenerator", "runtime": "pythons"},
            {"name": "student-query-status", "directory": "lambdas/orchestrators/QueryStatus", "runtime": "nodejs"},
            {"name": "student-query-user-data-generator", "directory": "lambdas/orchestrators/UserDataGenerator", "runtime": "nodejs"}
        ]

  deploy-prod:
    name: Deploy to Prod
    needs: deploy-dev
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    uses: ./.github/workflows/services-deploy.yml
    with:
      environment: prod
      aws_account_id: "054037129431"
      lambda_functions: >-
        [
          {"name": "get-program-details", "directory": "lambda/GetProgramDetails"},
          {"name": "hello_world", "directory": "lambda/HelloWorld"}
        ]
